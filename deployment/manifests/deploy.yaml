apiVersion: apps/v1beta2
kind: Deployment
metadata:
  name: prometheus-metrics-vmware-v1
  namespace: prometheus-metrics-vmware
  labels:
    service: prometheus-metrics-vmware
    version: v1
spec:
  replicas: 1
  strategy:
    type: RollingUpdate
    rollingUpdate:
       maxSurge: 25%
       maxUnavailable: 5%
  selector:
    matchLabels:
      service: prometheus-metrics-vmware
      version: v1
  template:
    metadata:
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "5000"
      labels:
        service: prometheus-metrics-vmware
        version: v1
        service-prometheus-track: prometheus-metrics-vmware
    spec:
      containers:
      - name: prometheus-metrics-vmware
        image: <aws_account_id.dkr.ecr.region.amazonaws.com>/prometheus-metrics-vmware:latest
        imagePullPolicy: Always
        ports:
        - name: service-port
          containerPort: 5000
        readinessProbe:
          httpGet:
            path: /service-monitoring-v1/health
            port: service-port
          initialDelaySeconds: 10
          periodSeconds: 10
          successThreshold: 1
          failureThreshold: 3
          timeoutSeconds: 20
        livenessProbe:
          httpGet:
            path: /service-monitoring-v1/health
            port: service-port
          initialDelaySeconds: 10
          periodSeconds: 10
          successThreshold: 1
          failureThreshold: 3
          timeoutSeconds: 20
        resources:
          limits:
            memory: 1Gi
            cpu: 1
          requests:
            memory: 500Mi
            cpu: 500m

---
kind: Service
apiVersion: v1
metadata:
  name: prometheus-metrics-vmware
  namespace: prometheus-metrics-vmware
spec:
  selector:
    service: prometheus-metrics-vmware
  ports:
  - name: http
    port: 80
    targetPort: service-port
